:root {
  --box-color: #0ffa;
  --rotate-speed: 10s;
}

.body {
  background-color: #000;
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 50px;
  perspective: 10em;
  perspective-origin: 50% calc(50% - 2em);
}

.scene {
  position: relative;
}

.cube p {
  font-size: 0.5em;
}

.face {
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
}

.cube {
  width: 2em;
  height: 2em;
  position: absolute;
  top: -1em;
  left: -1em;
}
.cube .left,
.cube .right,
.cube .front,
.cube .back,
.cube .top,
.cube .bottom {
  position: absolute;
  width: 100%;
  height: 100%;
  background: var(--box-color);
  box-shadow: 0 0 0.5em #000a inset;
}
.cube .front {
  transform: translateZ(1em);
}
.cube .right {
  transform: rotateY(90deg) translateZ(1em);
}
.cube .back {
  transform: rotateY(180deg) translateZ(1em);
}
.cube .left {
  transform: rotateY(270deg) translateZ(1em);
}
.cube .top {
  transform: translateY(-50%) rotateX(90deg);
  box-shadow: 0 0 0.5em #000a inset;
}
.cube .bottom {
  bottom: 0;
  transform: translateY(50%) rotateX(-90deg);
  box-shadow: 0 0 0.5em #000a inset;
}

.cube-container {
  position: relative;
  transform-style: preserve-3d;
  animation: sceneRotate var(--rotate-speed) infinite linear;
}
@keyframes sceneRotate {
  to {
    transform: rotateY(360deg);
  }
}

.floor {
  position: absolute;
  transform: translate(-50%, -50%) rotateX(90deg);
  top: 1em;
  width: 15em;
  height: 15em;
  background-image: radial-gradient(#0000, #000 75%), repeating-conic-gradient(from 45deg, #111 0deg 90deg, #222 90deg 180deg);
  background-size: 100%, 1em 1em;
}

/*# sourceMappingURL=cubeRotate.css.map */
